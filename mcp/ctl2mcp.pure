
using mcpstate;

ctl2mcp (ctl val num chan) = convert (ctl val num chan) with
  convert (ctl val num chan) = () if mcp::getccchan num == 0 && chan > 1;
  = if passive then {touch (num*16+round(val/128*14)) 1}
    else {ctl (val/12.7+1) (num+48) 1, bend (val*129-8192) (num+1)}
  when
    mcp::getview && pd_send "midistrip" (view num 1);
  end if num >= 0 && num <= 7 && isstrip when
    mcp::setval num val;
    passive = mcp::passive num;
    isstrip = mcp::isstrip num;
    num = mcp::getstripnum num;
  end;
end;

ctl2mcp bang = ctls when
  ctls = {mcp::getccnum i | i = 0..7};
  ctls = {ctl2mcp (ctl (mcp::getval num) num (mcp::getccchan num)) |
	  num = ctls; num >= 0};
end;

ctl2mcp msg = () otherwise;
